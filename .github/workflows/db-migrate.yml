

name: Database migrations
on:
  push:
    branches:
    - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      flyway_action:
        description: 'Define Flyway action'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - repair
        - clean
        - migrate
env:
  - DB_NAME: FLYWAY_DB
  - WAREHOUSE_NAME: COMPUTE_WH
  - ROLE: SYSADMIN

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  db-migrate:
    name: Deploy DB
    runs-on: ubuntu-latest

    steps:
      - name: Check-out code from repository
        uses: actions/checkout@v3

      - name: Run Flyway in the docker container
        uses: docker://flyway/flyway:9.10.1
        env:
          FLYWAY_URL: jdbc:snowflake://${{ secrets.account }}.snowflakecomputing.com/?db=${{ env.DB_NAME }}&warehouse=${{ env.WAREHOUSE_NAME }}&role=${{ env.ROLE }}
          FLYWAY_USER: ${{ secrets.db_user_name }}
          FLYWAY_PASSWORD: ${{ secrets.db_secret }}
          FLYWAY_LOCATIONS: filesystem:./db/migrations
          FLYWAY_PLACEHOLDER_REPLACEMENT: "true"
          FLYWAY_PLACEHOLDERS_WAREHOUSE: ${{ env.WAREHOUSE_NAME }}
          FLYWAY_PLACEHOLDERS_DB_NAME: ${{ env.DB_NAME }}
        with: # указываем, какой аргумент надо передать в контейнер. Контейнер после создания прочитает этот аргумент.
          args: ${{ inputs.flyway_action }}